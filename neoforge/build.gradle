plugins {
	id "com.github.johnrengelman.shadow"
}

loom {

}

architectury {
	platformSetupLoomIde()
	neoForge()
}

configurations {
	common
	shadowCommon
	compileClasspath.extendsFrom common
	runtimeClasspath.extendsFrom common
	developmentNeoForge.extendsFrom common
}

dependencies {
	neoForge "net.neoforged:neoforge:${rootProject.forge_version}"
	modApi "${rootProject.architectury_id}:architectury-neoforge:${rootProject.architectury_version}"

	forgeRuntimeLibrary 'io.lettuce:lettuce-core:6.2.3.RELEASE'

	common(project(path: ":common", configuration: "namedElements")) { transitive false }
	shadowCommon(project(path: ":common", configuration: "transformProductionNeoForge")) { transitive = false }
}

processResources {
	inputs.property "version", project.version

	filesMatching("META-INF/neoforge.mods.toml") {
		expand (
			"version": project.version,
			"minecraft_version_range": rootProject.supports_minecraft_version_range
		)
	}
}

shadowJar {
	exclude "fabric.mod.json"
	exclude "*.bmp"
	exclude "META-INF/services/**"
	exclude "META-INF/native-image/**"
	exclude "META-INF/maven/**"
	exclude "META-INF/*.kotlin_module"

	configurations = [project.configurations.shadowCommon]
	archiveClassifier = "dev-shadow"

	dependencies {
		it.exclude it.dependency('io.netty:.*')
	}
	relocate "reactor", "vendor.cn.zbx1425.worldcomment.reactor"
	relocate "io.lettuce", "vendor.cn.zbx1425.worldcomment.io.lettuce"
	relocate "org.reactivestreams", "vendor.cn.zbx1425.worldcomment.org.reactivestreams"
}

remapJar {
	input.set shadowJar.archiveFile
	dependsOn shadowJar
	archiveClassifier = null
}

components.java {
	withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
		skip()
	}
}

repositories {
	maven { url "https://maven.neoforged.net/releases/" }
}

afterEvaluate {
	for (def task in it.tasks) {
		if (task == tasks.build) {
			if (System.env.GITHUB_ACTIONS) {
				task.dependsOn rootProject.tasks.setupLibrary
			}
		}
	}
}
